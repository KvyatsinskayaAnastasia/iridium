package com.iridium.library.utils.character;

import com.iridium.openapi.model.Gender;
import org.apache.commons.lang3.RandomUtils;

import java.util.List;

public final class CharacterGeneratorUtils {

    private CharacterGeneratorUtils() { }

    private static final List<String> FEMALE_NAMES = List.of(
        "Элианна",
        "Лираэль",
        "Селестия",
        "Фионара",
        "Калина",
        "Зарафина",
        "Астралия",
        "Нимфадора",
        "Тианна",
        "Исольда",
        "Виридис",
        "Мелинда",
        "Ксенияра",
        "Лунария",
        "Драэна",
        "Эльвира",
        "Наэля",
        "Рианна",
        "Серафина",
        "Талия",
        "Эстелла",
        "Фреяна",
        "Гвиневра",
        "Ария",
        "Зенобия",
        "Аурелия",
        "Сильвия",
        "Тераса",
        "Лианор",
        "Эдриана",
        "Нерея",
        "Лилития",
        "Фионелла",
        "Калипсо",
        "Валькирия",
        "Эсмерельда",
        "Нимфея",
        "Илария",
        "Сарита",
        "Лоренна",
        "Аделина",
        "Мирабелла",
        "Зефирина",
        "Кристалия",
        "Розалинд",
        "Аурора",
        "Нимфадель",
        "Селена",
        "Тиффанира",
        "Эльсинор",
        "Веридисса",
        "Линетта",
        "Фиалка",
        "Эрида",
        "Лорелли",
        "Мелисса",
        "Эстерана",
        "Кассандра",
        "Дейдра",
        "Флорентина",
        "Ноксана",
        "Астридия",
        "Лунаринда",
        "Тиарана",
        "Серафита",
        "Вивьенна",
        "Элиора",
        "Наомиэль",
        "Риверна",
        "Золотая Лилия (Золота)",
        "Мариэль",
        "Хлояна",
        "Сиелла",
        "Талисса",
        "Эмберлин",
        "Наяда",
        "Каприола",
        "Снежана",
        "Розмариэль",
        "Аделаида",
        "Фелисити",
        "Тенебрис",
        "Небулия",
        "Эвандра",
        "Эсфирь",
        "Лейла",
        "Орионна",
        "Саринель",
        "Фрея",
        "Ингрид",
        "Лилисса",
        "Рейна",
        "Кристина",
        "Айрис",
        "Ясмина",
        "Габриэла",
        "Мадлен",
        "Элиза",
        "Наяда",
        "Сильвана"
    );

    private static final List<String> MALE_NAMES = List.of(
        "Эльдорак",
        "Торвин",
        "Каледон",
        "Дарион",
        "Зарис",
        "Фенрир",
        "Астромир",
        "Лиорик",
        "Рагнар",
        "Сердар",
        "Галадор",
        "Морвен",
        "Таласар",
        "Валерион",
        "Ксандер",
        "Драгор",
        "Эргард",
        "Бальтазар",
        "Тирион",
        "Аурик",
        "Сирен",
        "Гриммур",
        "Луциан",
        "Фернандо",
        "Кадир",
        "Морфей",
        "Эдрик",
        "Нарис",
        "Ривен",
        "Дамарис",
        "Тарин",
        "Калигар",
        "Солан",
        "Феникс",
        "Яргос",
        "Элиан",
        "Торвалд",
        "Виндор",
        "Зенон",
        "Атреус",
        "Лоркан",
        "Рагнус",
        "Кримсон",
        "Деймон",
        "Силванус",
        "Ривальд",
        "Гаэль",
        "Тимурин",
        "Эстебан",
        "Аланор",
        "Морисан",
        "Каден",
        "Джаред",
        "Фелдрик",
        "Камильон",
        "Солярис",
        "Терон",
        "Эвандер",
        "Леонардо",
        "Альтарион",
        "Сигурд",
        "Дариус",
        "Калдерон",
        "Террион",
        "Варгос",
        "Локтар",
        "Эрнстис",
        "Магнус",
        "Фалькос",
        "Тристан",
        "Лианор",
        "Кассиус",
        "Эсторин",
        "Харгон",
        "Роанн",
        "Заргос",
        "Финнегас",
        "Далериус",
        "Торинус",
        "Ясирий",
        "Гавриил",
        "Кайрос",
        "Северос",
        "Фаустин",
        "Джордано"
    );

    private static final List<String> SURNAMES = List.of(
        "Альдарион",
        "Блэквуд",
        "Кальдвел",
        "Дасквиспер",
        "Эльмсворт",
        "Фростбейн",
        "Гейлкарт",
        "Хоуорн",
        "Айронфист",
        "Джадефайр",
        "Кингсли",
        "Ларкспер",
        "Муншадоу",
        "Найтишад",
        "Окенкарт",
        "Пайнкраст",
        "Квиксилвер",
        "Рейвенвуд",
        "Сильверстрим",
        "Торнфилд",
        "Андерхил",
        "Вангуард",
        "Виндрайдер",
        "Ксандор",
        "Юторн",
        "Заратуш",
        "Ашенвил",
        "Беллами",
        "Циндрафал",
        "Дрейквуд",
        "Эмберстон",
        "Фэллоуфилд",
        "Глиммерстон",
        "Хайтейр",
        "Айвори-клав",
        "Джасперторн",
        "Кестрелвинд",
        "Лейтхивен",
        "Мистраль",
        "Найткок",
        "Ульфедр",
        "Перегрин",
        "Кварзстрайк",
        "Редлиф",
        "Штормвотчер",
        "Цистлвуд",
        "Умберлиф",
        "Вердантвейл",
        "Вейвли",
        "Ксертис",
        "Йондервуд",
        "Зефирвинд",
        "Этериус",
        "Брайервуд",
        "Кресцентмун",
        "Драгонфайр",
        "Эмберфал",
        "Фроствейл",
        "Гейлвивер",
        "Холовей",
        "Айронвуд",
        "Джадеклав",
        "Кинарет",
        "Лунаркрест",
        "Мистбрук",
        "Нимблфут",
        "Обсидианхарт",
        "Пайнвиспер",
        "Кварзмун",
        "Ревеншадов",
        "Сильверторн",
        "Торнридж",
        "Умбралайт",
        "Вайолетшадов",
        "Вольфсбейн",
        "Хантос",
        "Яровделл",
        "Зинния"
    );

    private static final List<String> TEMPERS = List.of(
        "ISTJ - Ответственный, организованный и практичный. Ценит традиции и порядок.",
        "ISFJ - Заботливый, преданный и внимательный к деталям. Стремится помочь другим.",
        "INFJ - Интуитивный, идеалистичный и глубоко чувствующий. Ищет смысл и цель в жизни.",
        "INTJ - Стратегический, независимый и аналитический. Любит решать сложные задачи.",
        "ISTP - Практичный, гибкий и решительный. Предпочитает действовать на основе опыта.",
        "ISFP - Творческий, чувствительный и спонтанный. Ценит красоту и гармонию.",
        "INFP - Идеалистичный, мечтательный и сострадательный. Стремится к самовыражению.",
        "INTP - Логичный, любознательный и оригинальный. Обожает теорию и концепции.",
        "ESTP - Энергичный, находчивый и прагматичный. Любит приключения и активный образ жизни.",
        "ESFP - Общительный, веселый и живой. Стремится наслаждаться моментом.",
        "ENFP - Творческий, вдохновляющий и увлеченный. Ищет новые идеи и возможности.",
        "ENTP - Провокационный, умный и изобретательный. Любит обсуждать идеи и концепции.",
        "ESTJ - Организованный, практичный и решительный. Ценит структуру и порядок.",
        "ESFJ - Заботливый, общительный и ответственный. Стремится поддерживать гармонию в группе.",
        "ENFJ - Вдохновляющий, эмпатичный и отзывчивый. Стремится помочь другим реализовать их потенциал.",
        "ENTJ - Лидерский, амбициозный и стратегический. Стремится к достижению целей."
    );

    /**
     * Generate character name.
     * @param gender gender
     * @return random character name
     */
    public static String generateName(final Gender gender) {
        return switch (gender) {
            case MALE -> MALE_NAMES.get(RandomUtils.nextInt(0, MALE_NAMES.size() - 1)) + " "
                + SURNAMES.get(RandomUtils.nextInt(0, SURNAMES.size() - 1));
            case FEMALE -> FEMALE_NAMES.get(RandomUtils.nextInt(0, FEMALE_NAMES.size() - 1)) + " "
                + SURNAMES.get(RandomUtils.nextInt(0, SURNAMES.size() - 1));
        };
    }

    /**
     * Generate character temper.
     * @return random character temper by 16 personalities
     */
    public static String generateTemper() {
        return TEMPERS.get(RandomUtils.nextInt(0, TEMPERS.size() - 1));
    }
}
